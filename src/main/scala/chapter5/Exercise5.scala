package chapter5

import scala.beans.BeanProperty

/**
  * Make a class `Student` with read-write JavaBeans properties `name` (of type [[String]] )
  * and `id` (of type [[Long]] ). What methods are generated? (Use `javap` to check.)
  *
  * {{{
  * $> javap -private target/scala-2.12/classes/chapter5/Student.class
  * Compiled from "Exercise5.scala"
  * public class chapter5.Student {
  *   private java.lang.String name;
  *   private long id;
  *   public java.lang.String name();
  *   public void name_$eq(java.lang.String);
  *   public long id();
  *   public void id_$eq(long);
  *   public long getId();
  *   public java.lang.String getName();
  *   public void setId(long);
  *   public void setName(java.lang.String);
  *   public chapter5.Student();
  * }
  * }}}
  * Can you call the JavaBeans getters and setters in Scala?<p>
  * Yes.<p>
  * Should you? <p>
  * No. Getters and setters generated by the @[[BeanProperty]] annotation must comply with the JavaBeans specification,
  * but this is not the Scala-way.
  */
object Exercise5 {
}

class Student {
  @BeanProperty var name: String = _
  @BeanProperty var id: Long = _
}



